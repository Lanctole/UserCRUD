version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  greenmail:
    image: greenmail/standalone:latest
    container_name: greenmail
    ports:
      - "3025:3025"
      - "3143:3143"
      - "3993:3993"
      - "9090:8080"

    environment:
      GREENMAIL_OPTS: "-Dgreenmail.setup.all=true -Dgreenmail.hostname=0.0.0.0 -Dgreenmail.web.enable=true -Dgreenmail.web.port=9090"
      GREENMAIL_USERS: "test:password"

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d myappdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery-service:
    build:
      context: ./deploy
      dockerfile: Dockerfile
      args:
          JAR_FILE: discovery-service.jar
    container_name: discovery-service
    ports:
      - "9556:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  config-service:
    build:
      context: ./deploy
      dockerfile: Dockerfile
      args:
          JAR_FILE: config-service.jar
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - discovery-service

  gateway-service:
    build:
      context: ./deploy
      dockerfile: Dockerfile
      args:
          JAR_FILE: gateway-service.jar
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - discovery-service
      - config-service
      - kafka

  user-service:
    build:
      context: ./deploy
      dockerfile: Dockerfile
      args:
          JAR_FILE: user-service.jar
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/myappdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - discovery-service
      - config-service
      - postgres
      - kafka

  notification-service:
    build:
      context: ./deploy
      dockerfile: Dockerfile
      args:
          JAR_FILE: notification-service.jar
    container_name: notification-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - discovery-service
      - config-service
      - kafka

volumes:
  pgdata: